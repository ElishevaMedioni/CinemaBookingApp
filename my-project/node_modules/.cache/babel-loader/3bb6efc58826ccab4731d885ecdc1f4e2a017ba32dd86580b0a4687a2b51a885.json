{"ast":null,"code":"var _jsxFileName = \"/Users/Elish_1/Downloads/project6FS - Copy 2/my-project/src/js/MovieSelection.js\",\n  _s = $RefreshSig$();\n// MovieSelection.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/MovieSelection.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSelection(_ref) {\n  _s();\n  let {\n    onSelectMovie\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch movies from your API\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/api/movies\");\n        const data = await response.json();\n        setMovies(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(\"Error occurred while fetching data:\", error);\n        setLoading(false);\n        // Additional error handling if needed\n      }\n    };\n\n    fetchMovies();\n  }, []);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n    onSelectMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2title\",\n      children: \"Choose a Movie:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-selection-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectMovie(movie),\n        className: `movie-card ${(selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.id) === movie.id ? \"selected\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.posterUrl,\n          alt: movie.name,\n          className: \"movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-details\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSelection, \"A6v8QG7mLJ7N3XJpk3V3cmsI0Lo=\");\n_c = MovieSelection;\nexport default MovieSelection;\nvar _c;\n$RefreshReg$(_c, \"MovieSelection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieSelection","_ref","_s","onSelectMovie","movies","setMovies","selectedMovie","setSelectedMovie","loading","setLoading","fetchMovies","response","fetch","data","json","error","console","log","handleSelectMovie","movie","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","src","posterUrl","alt","name","_c","$RefreshReg$"],"sources":["/Users/Elish_1/Downloads/project6FS - Copy 2/my-project/src/js/MovieSelection.js"],"sourcesContent":["// MovieSelection.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../css/MovieSelection.css\"; // Import the CSS file\r\n\r\nfunction MovieSelection({ onSelectMovie }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch movies from your API\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3001/api/movies\");\r\n        const data = await response.json();\r\n        setMovies(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(\"Error occurred while fetching data:\", error);\r\n        setLoading(false);\r\n        // Additional error handling if needed\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n    onSelectMovie(movie);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2title\">Choose a Movie:</h2>\r\n      <div className=\"movie-selection-container\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          movies.map((movie) => (\r\n            <div\r\n              key={movie.id}\r\n              onClick={() => handleSelectMovie(movie)}\r\n              className={`movie-card ${\r\n                selectedMovie?.id === movie.id ? \"selected\" : \"\"\r\n              }`}\r\n            >\r\n              <img\r\n                src={movie.posterUrl}\r\n                alt={movie.name}\r\n                className=\"movie-poster\"\r\n              />\r\n              <div className=\"movie-details\">\r\n                <p>{movie.name}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSelection;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}